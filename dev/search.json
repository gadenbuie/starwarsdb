[{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Garrick Aden-Buie Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Garrick Aden-Buie. Author, maintainer.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Aden-Buie G (2025). starwarsdb: Relational Data 'Star Wars' API Learning Teaching. R package version 0.1.3.9000, https://github.com/gadenbuie/starwarsdb.","code":"@Manual{,   title = {starwarsdb: Relational Data from the 'Star Wars' API for Learning and Teaching},   author = {Garrick Aden-Buie},   year = {2025},   note = {R package version 0.1.3.9000},   url = {https://github.com/gadenbuie/starwarsdb}, }"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"starwarsdb","dir":"","previous_headings":"","what":"Relational Data from the Star Wars API for Learning and Teaching","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"starwarsdb provides data (now defunct) Star Wars API set relational tables, -package DuckDB database.  Formats: Metadata, Local Tables, Remote Tables, Data Model (dm), API (rwars)","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"can install starwarsdb CRAN: can install development version starwarsdb GitHub remotes:","code":"install.packages(\"starwarsdb\") # install.packages(\"remotes\")  remotes::install_github(\"gadenbuie/starwarsdb\")  # For remotes <= 2.1.0 remotes::install_github(\"gadenbuie/starwarsdb@main\")"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"star-wars-data","dir":"","previous_headings":"","what":"Star Wars Data","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"tables available load starwarsdb via schema table includes information tables sourced SWAPI.","code":"library(dplyr) library(starwarsdb) data(package = \"starwarsdb\") schema #> # A tibble: 5 × 4 #>   endpoint endpoint_title endpoint_description                    properties #>   <chr>    <chr>          <chr>                                   <list>     #> 1 films    Film           A Star Wars film                        <tibble>   #> 2 vehicles Starship       A Starship or vehicle                   <gropd_df> #> 3 species  People         A species within the Star Wars universe <tibble>   #> 4 planets  Planet         A planet.                               <tibble>   #> 5 people   People         A person within the Star Wars universe  <tibble> schema %>%   filter(endpoint == \"films\") %>%   pull(properties) #> [[1]] #> # A tibble: 14 × 4 #>    variable      type    description                                      format #>    <chr>         <chr>   <chr>                                            <chr>  #>  1 starships     array   The starship resources featured within this fil… <NA>   #>  2 edited        string  the ISO 8601 date format of the time that this … date-… #>  3 planets       array   The planet resources featured within this film.  <NA>   #>  4 producer      string  The producer(s) of this film.                    <NA>   #>  5 title         string  The title of this film.                          <NA>   #>  6 url           string  The url of this resource                         uri    #>  7 release_date  string  The release date at original creator country.    date   #>  8 vehicles      array   The vehicle resources featured within this film. <NA>   #>  9 episode_id    integer The episode number of this film.                 <NA>   #> 10 director      string  The director of this film.                       <NA>   #> 11 created       string  The ISO 8601 date format of the time that this … date-… #> 12 opening_crawl string  The opening crawl text at the beginning of this… <NA>   #> 13 characters    array   The people resources featured within this film.  <NA>   #> 14 species       array   The species resources featured within this film. <NA>"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"local-tables","dir":"","previous_headings":"","what":"Local Tables","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"Ask questions, like flew X-Wing?","code":"x_wing_pilots <- pilots %>% filter(vehicle == \"X-wing\") x_wing_pilots #> # A tibble: 4 × 2 #>   pilot             vehicle #>   <chr>             <chr>   #> 1 Luke Skywalker    X-wing  #> 2 Biggs Darklighter X-wing  #> 3 Wedge Antilles    X-wing  #> 4 Jek Tono Porkins  X-wing  people %>% semi_join(x_wing_pilots, by = c(name = \"pilot\")) #> # A tibble: 4 × 11 #>   name  height  mass hair_color skin_color eye_color birth_year gender homeworld #>   <chr>  <dbl> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>  <chr>     #> 1 Luke…    172    77 blond      fair       blue              19 mascu… Tatooine  #> 2 Bigg…    183    84 black      light      brown             24 mascu… Tatooine  #> 3 Wedg…    170    77 brown      fair       hazel             21 mascu… Corellia  #> 4 Jek …    180   110 brown      fair       blue              NA mascu… Bestine … #> # ℹ 2 more variables: species <chr>, sex <chr>"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"remote-tables","dir":"","previous_headings":"","what":"Remote Tables","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"starwarsdb also includes entire data set DuckDB database, appropriate teaching practicing remote database access dbplyr.","code":"con <- starwars_connect()  people_rmt <- tbl(con, \"people\") pilots_rmt <- tbl(con, \"pilots\") pilots_rmt #> # Source:   table<pilots> [?? x 2] #> # Database: DuckDB v1.3.2 [root@Darwin 24.5.0:R 4.4.3/:memory:] #>    pilot             vehicle           #>    <chr>             <chr>             #>  1 Chewbacca         Millennium Falcon #>  2 Han Solo          Millennium Falcon #>  3 Lando Calrissian  Millennium Falcon #>  4 Nien Nunb         Millennium Falcon #>  5 Luke Skywalker    X-wing            #>  6 Biggs Darklighter X-wing            #>  7 Wedge Antilles    X-wing            #>  8 Jek Tono Porkins  X-wing            #>  9 Darth Vader       TIE Advanced x1   #> 10 Boba Fett         Slave 1           #> # ℹ more rows  x_wing_pilots <- pilots_rmt %>% filter(vehicle == \"X-wing\") x_wing_pilots #> # Source:   SQL [?? x 2] #> # Database: DuckDB v1.3.2 [root@Darwin 24.5.0:R 4.4.3/:memory:] #>   pilot             vehicle #>   <chr>             <chr>   #> 1 Luke Skywalker    X-wing  #> 2 Biggs Darklighter X-wing  #> 3 Wedge Antilles    X-wing  #> 4 Jek Tono Porkins  X-wing  people_rmt %>% semi_join(x_wing_pilots, by = c(name = \"pilot\")) #> # Source:   SQL [?? x 11] #> # Database: DuckDB v1.3.2 [root@Darwin 24.5.0:R 4.4.3/:memory:] #>   name  height  mass hair_color skin_color eye_color birth_year gender homeworld #>   <chr>  <dbl> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>  <chr>     #> 1 Jek …    180   110 brown      fair       blue              NA mascu… Bestine … #> 2 Bigg…    183    84 black      light      brown             24 mascu… Tatooine  #> 3 Luke…    172    77 blond      fair       blue              19 mascu… Tatooine  #> 4 Wedg…    170    77 brown      fair       hazel             21 mascu… Corellia  #> # ℹ 2 more variables: species <chr>, sex <chr>"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"dm-tables","dir":"","previous_headings":"","what":"DM Tables","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"Finally, starwarsdb provides function returns pre-configured dm object. dm package wraps local data frames complete relational data model.","code":"library(dm, warn.conflicts = FALSE)  sw_dm <- starwars_dm() sw_dm #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `films`, `people`, `planets`, `species`, `vehicles`, … (9 total) #> Columns: 58 #> Primary keys: 5 #> Foreign keys: 10  sw_dm %>%   dm_select_tbl(pilots, people) %>%   dm_filter(pilots = vehicle == \"X-wing\") %>%   dm_zoom_to(\"people\") %>%   semi_join(pilots) #> # Zoomed table: people #> # A tibble:     4 × 11 #>   name  height  mass hair_color skin_color eye_color birth_year gender homeworld #>   <chr>  <dbl> <dbl> <chr>      <chr>      <chr>          <dbl> <chr>  <chr>     #> 1 Luke…    172    77 blond      fair       blue              19 mascu… Tatooine  #> 2 Bigg…    183    84 black      light      brown             24 mascu… Tatooine  #> 3 Wedg…    170    77 brown      fair       hazel             21 mascu… Corellia  #> 4 Jek …    180   110 brown      fair       blue              NA mascu… Bestine … #> # ℹ 2 more variables: species <chr>, sex <chr> dm_draw(sw_dm)"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/index.html","id":"api","dir":"","previous_headings":"","what":"API","title":"Relational Data from the Star Wars API for Learning and Teaching","text":"API access R, check rwars package Oliver Keyes. Big thanks rwars making easy access Star Wars API!","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films.html","id":null,"dir":"Reference","previous_headings":"","what":"Films — films","title":"Films — films","text":"Films Star Wars movie franchise.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Films — films","text":"","code":"films"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Films — films","text":"data frame 6 rows 6 variables: title title film. episode_id episode number film. opening_crawl opening crawl text beginning film. director director film. producer producer(s) film. release_date release date original creator country.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Films — films","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_people.html","id":null,"dir":"Reference","previous_headings":"","what":"People in Films — films_people","title":"People in Films — films_people","text":"Links characters (people) films appear.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_people.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"People in Films — films_people","text":"","code":"films_people"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_people.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"People in Films — films_people","text":"data frame 162 rows 2 variables: title title film. character name character appeared film.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_people.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"People in Films — films_people","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_planets.html","id":null,"dir":"Reference","previous_headings":"","what":"Planets in Films — films_planets","title":"Planets in Films — films_planets","text":"Links planets films appear.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_planets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planets in Films — films_planets","text":"","code":"films_planets"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_planets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Planets in Films — films_planets","text":"data frame 33 rows 2 variables: title title film. planet name planet appeared film.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_planets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Planets in Films — films_planets","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_vehicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Vehicles in Films — films_vehicles","title":"Vehicles in Films — films_vehicles","text":"Links vehicles films appear","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_vehicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vehicles in Films — films_vehicles","text":"","code":"films_vehicles"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_vehicles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Vehicles in Films — films_vehicles","text":"data frame 104 rows 2 variables: title title film. vehicle name vehicle appeared film.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/films_vehicles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Vehicles in Films — films_vehicles","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/people.html","id":null,"dir":"Reference","previous_headings":"","what":"People — people","title":"People — people","text":"Characters within Star Wars universe.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/people.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"People — people","text":"","code":"people"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/people.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"People — people","text":"data frame 82 rows 10 variables: name name person. height height person meters. mass mass person kilograms. hair_color hair color person. skin_color skin color person. eye_color eye color person. birth_year birth year person. BBY (Battle Yavin) ABY (Battle Yavin). sex biological sex character. One male, female, hermaphroditic, none. gender gender role gender identity character. homeworld planet character born . species species character.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/people.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"People — people","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pilots.html","id":null,"dir":"Reference","previous_headings":"","what":"Pilots — pilots","title":"Pilots — pilots","text":"Links people vehicles piloted.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pilots.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pilots — pilots","text":"","code":"pilots"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pilots.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Pilots — pilots","text":"data frame 43 rows 2 variables: pilot name person piloted vehicle. vehicle name vehicle piloted.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pilots.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Pilots — pilots","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/planets.html","id":null,"dir":"Reference","previous_headings":"","what":"Planets — planets","title":"Planets — planets","text":"Planets Star Wars universe.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/planets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Planets — planets","text":"","code":"planets"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/planets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Planets — planets","text":"data frame 59 rows 9 variables: name name planet. rotation_period number standard hours takes planet complete single rotation axis. orbital_period number standard days takes planet complete single orbit local star. diameter diameter planet kilometers. climate climate planet. Comma-seperated diverse. gravity number denoting gravity planet. 1 normal. terrain terrain planet. Comma-seperated diverse. surface_water percentage planet surface naturally occurring water bodies water. population average population sentient beings inhabiting planet.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/planets.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Planets — planets","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/schema.html","id":null,"dir":"Reference","previous_headings":"","what":"Star Wars Data Schema — schema","title":"Star Wars Data Schema — schema","text":"Includes information schema tables sourced SWAPI, Star Wars API. properties returned API columns data package: properties refactored separate tables. example, combined starships/ vehicles/ endpoint single table. API endpoints returned \"pilots\" property, described schema array people piloted vehicle. information property extracted separate table called pilots starwarsdb package.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/schema.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Star Wars Data Schema — schema","text":"","code":"schema"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/schema.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Star Wars Data Schema — schema","text":"data frame 5 rows 4 variables: endpoint name SWAPI endpoint. endpoint_title title SWAPI endpoint. endpoint_description description SWAPI endpoint. properties properties endpoint nested table containing variable, data type, description format property.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/schema.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Star Wars Data Schema — schema","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/species.html","id":null,"dir":"Reference","previous_headings":"","what":"Species — species","title":"Species — species","text":"Species within Star Wars universe.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Species — species","text":"","code":"species"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/species.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Species — species","text":"data frame 37 rows 10 variables: name name species. classification classification species. designation designation species. average_height average height person centimeters. skin_colors comma-seperated string common skin colors species, none species typically skin. hair_colors comma-seperated string common hair colors species, none species typically hair. eye_colors comma-seperated string common eye colors species, none species typically eyes. average_lifespan average lifespan species years. homeworld URL planet resource, planet species originates . language language commonly spoken species.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/species.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Species — species","text":"Star Wars API (SWAPI).","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":null,"dir":"Reference","previous_headings":"","what":"Connect to the Star Wars Database — starwars_db","title":"Connect to the Star Wars Database — starwars_db","text":"Provides connection DuckDB database Star Wars data. Alternatively, can use starwars_db() manually connect database using DBI::dbConnect() duckdb::duckdb().","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Connect to the Star Wars Database — starwars_db","text":"","code":"starwars_connect(dbdir = \":memory:\", ...)  starwars_disconnect(con)  starwars_db()"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Connect to the Star Wars Database — starwars_db","text":"dbdir Location database files. path existing directory file system. default (\"\"), data kept RAM. ... Additional parameters passed DBI::dbConnect() con connection Star Wars database","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Connect to the Star Wars Database — starwars_db","text":"connection Star Wars database, path database.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Connect to the Star Wars Database — starwars_db","text":"starwars_connect(): Connect DuckDB database starwars_disconnect(): Disconnect DuckDB database starwars_db(): Returns path starwarsdb database","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_db.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Connect to the Star Wars Database — starwars_db","text":"","code":"# Manually connect using {duckdb} and {DBI} con <- DBI::dbConnect(   duckdb::duckdb(),   dbdir = starwars_db(),   read_only = TRUE )  if (requireNamespace(\"dplyr\", quietly = TRUE)) {   dplyr::tbl(con, \"films\") } #> # Source:   table<films> [?? x 6] #> # Database: DuckDB v1.3.2 [unknown@Linux 6.11.0-1018-azure:R 4.5.1//tmp/RtmpwVs6vj/starwarsdb1efc4263f8e0/starwars.duckdb] #>   title                  episode_id opening_crawl director producer release_date #>   <chr>                       <int> <chr>         <chr>    <chr>    <date>       #> 1 A New Hope                      4 \"It is a per… George … Gary Ku… 1977-05-25   #> 2 The Empire Strikes Ba…          5 \"It is a dar… Irvin K… Gary Ku… 1980-05-17   #> 3 Return of the Jedi              6 \"Luke Skywal… Richard… Howard … 1983-05-25   #> 4 The Phantom Menace              1 \"Turmoil has… George … Rick Mc… 1999-05-19   #> 5 Attack of the Clones            2 \"There is un… George … Rick Mc… 2002-05-16   #> 6 Revenge of the Sith             3 \"War! The Re… George … Rick Mc… 2005-05-19    # Disconnect from that database (shutdown is specific to duckdb) DBI::dbDisconnect(con, shutdown = TRUE)  # Or connect without worrying about connection details con <- starwars_connect()  if (requireNamespace(\"dplyr\", quietly = TRUE)) {   dplyr::tbl(con, \"films\") } #> # Source:   table<films> [?? x 6] #> # Database: DuckDB v1.3.2 [unknown@Linux 6.11.0-1018-azure:R 4.5.1/:memory:] #>   title                  episode_id opening_crawl director producer release_date #>   <chr>                       <int> <chr>         <chr>    <chr>    <date>       #> 1 A New Hope                      4 \"It is a per… George … Gary Ku… 1977-05-25   #> 2 The Empire Strikes Ba…          5 \"It is a dar… Irvin K… Gary Ku… 1980-05-17   #> 3 Return of the Jedi              6 \"Luke Skywal… Richard… Howard … 1983-05-25   #> 4 The Phantom Menace              1 \"Turmoil has… George … Rick Mc… 1999-05-19   #> 5 Attack of the Clones            2 \"There is un… George … Rick Mc… 2002-05-16   #> 6 Revenge of the Sith             3 \"War! The Re… George … Rick Mc… 2005-05-19    # Similarly, disconnect quickly without worrying about duckdb arguments starwars_disconnect(con)"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a Star Wars Data Model Object — starwars_dm","title":"Create a Star Wars Data Model Object — starwars_dm","text":"Creates dm object starwarsdb tables.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a Star Wars Data Model Object — starwars_dm","text":"","code":"starwars_dm(configure_dm = TRUE, remote = FALSE)  starwars_dm_configure(dm)"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a Star Wars Data Model Object — starwars_dm","text":"configure_dm TRUE (default) returned dm object completely configured primary foreign keys. Set FALSE want practice configuring dm object . remote TRUE, uses internal DuckDB database rather local tables, default. dm dm object starwarsdb tables","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a Star Wars Data Model Object — starwars_dm","text":"dm object","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Create a Star Wars Data Model Object — starwars_dm","text":"starwars_dm_configure(): Configure starwars dm object primary foreign keys colors.","code":""},{"path":[]},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwars_dm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a Star Wars Data Model Object — starwars_dm","text":"","code":"# If the {dm} package is installed... if (requireNamespace(\"dm\", quietly = TRUE)) {   # Create a full starwars {dm} object from local tables   starwars_dm(remote = TRUE)    # Create a base starwars {dm} object from remote tables wihout keys   starwars_dm(configure_dm = FALSE, remote = TRUE) } #> ── Table source ──────────────────────────────────────────────────────────────── #> src:  DuckDB v1.3.2 [unknown@Linux 6.11.0-1018-azure:R 4.5.1/:memory:] #> ── Metadata ──────────────────────────────────────────────────────────────────── #> Tables: `films`, `films_people`, `films_planets`, `films_vehicles`, `people`, … (9 total) #> Columns: 58 #> Primary keys: 0 #> Foreign keys: 0"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwarsdb-package.html","id":null,"dir":"Reference","previous_headings":"","what":"Relational Data from the Star Wars API for Learning and Teaching — starwarsdb-package","title":"Relational Data from the Star Wars API for Learning and Teaching — starwarsdb-package","text":"starwarsdb provides tables films, characters, planets vehicles Star Wars movie franchise universe. package tables organized facilitate learning relational database concepts, like joins. also includes functions connect local DuckDB (file-based) database teaching practice working remote databases via dplyr, DBI, dm.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwarsdb-package.html","id":"tables","dir":"Reference","previous_headings":"","what":"Tables","title":"Relational Data from the Star Wars API for Learning and Teaching — starwarsdb-package","text":"films people planets species vehicles pilots films_people films_planets films_vehicles schema","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwarsdb-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relational Data from the Star Wars API for Learning and Teaching — starwarsdb-package","text":"Star Wars API (SWAPI).","code":""},{"path":[]},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/starwarsdb-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Relational Data from the Star Wars API for Learning and Teaching — starwarsdb-package","text":"Maintainer: Garrick Aden-Buie garrick@adenbuie.com (ORCID)","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/vehicles.html","id":null,"dir":"Reference","previous_headings":"","what":"Starships or Vehicles — vehicles","title":"Starships or Vehicles — vehicles","text":"Starship vehicle Star Wars universe.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/vehicles.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Starships or Vehicles — vehicles","text":"","code":"vehicles"},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/vehicles.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Starships or Vehicles — vehicles","text":"data frame 75 rows 14 variables: name name vehicle. common name, Sand Crawler. type type vehicle: starship vehicle. class class vehicle, source starship_class vehicle_class. model model official name vehicle. Terrain Attack Transport. manufacturer manufacturer vehicle. Comma seperated one. cost_in_credits cost vehicle new, galactic credits. length length vehicle meters. max_atmosphering_speed maximum speed vehicle atmosphere. crew number personnel needed run pilot vehicle. passengers number non-essential people vehicle can transport. cargo_capacity maximum number kilograms vehicle can transport. consumables maximum length time vehicle can provide consumables entire crew without resupply. hyperdrive_rating class starships hyperdrive. MGLT Maximum number Megalights starship can travel standard hour. Megalight standard unit distance never defined within Star Wars universe. figure really useful measuring difference speed starships. can assume similar AU, distance Sun (Sol) Earth.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/reference/vehicles.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Starships or Vehicles — vehicles","text":"Star Wars API (SWAPI).","code":""},{"path":[]},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/news/index.html","id":"starwarsdb-013","dir":"Changelog","previous_headings":"","what":"starwarsdb 0.1.3","title":"starwarsdb 0.1.3","text":"CRAN release: 2025-08-22 Small fix starwarsdb tests use testthat::local_mocked_bindings().","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/news/index.html","id":"starwarsdb-012","dir":"Changelog","previous_headings":"","what":"starwarsdb 0.1.2","title":"starwarsdb 0.1.2","text":"CRAN release: 2020-11-02 starwarsdb creates duckdb database connection, rather shipping .duckdb files. makes package resilient changes underlying format duckdb database files.","code":""},{"path":"https://pkg.garrickadenbuie.com/starwarsdb/dev/news/index.html","id":"starwarsdb-011","dir":"Changelog","previous_headings":"","what":"starwarsdb 0.1.1","title":"starwarsdb 0.1.1","text":"CRAN release: 2020-10-28 Released CRAN!","code":""}]
